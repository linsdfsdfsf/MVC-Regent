<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.w3.org/DataOperation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <dataCommand name="GetUserInfoByUserAccount" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT A.*, B.CUSTOMER_ID, c.CUSTOMER_NAME
  FROM D_User A
       JOIN D_USER_CUSTOMER_RELATION B
          ON A.USER_ID = B.USER_ID
       JOIN D_CUSTOMER C
          ON B.CUSTOMER_ID = C.CUSTOMER_ID
 WHERE UPPER (A.user_account) = UPPER (:User_Account)
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetUserInfoByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
     
     SELECT A.*, B.CUSTOMER_ID
  FROM D_User A LEFT JOIN D_USER_CUSTOMER_RELATION B
          ON A.USER_ID = B.USER_ID
 WHERE A.USER_ID = :User_ID
     
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>



  <dataCommand name="GetRoleListByUserAccount" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT B.*,c.user_id
     FROM D_Role A 
     LEFT JOIN D_User_Role_Relation B
       ON a.role_id = b.role_id
     LEFT JOIN D_User C
     ON B.USER_ID=C.USER_ID
     WHERE UPPER(C.USER_Account) = UPPER(:User_Account) and a.IS_VALID = 1
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddLoginLog" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
      INSERT INTO d_login_log
         (USER_Account, LOGIN_TIME, LOGIN_IP, HOST_NAME,BROWSER_INFO,BROWSER_LANGUAGE,BROWSER_BYTE,LOGIN_EQUIPMENT)
      VALUES
         (UPPER(:User_Account), SYSDATE, :Login_IP, :Host_Name,:BROWSER_INFO,:BROWSER_LANGUAGE,:BROWSER_BYTE,:LOGIN_EQUIPMENT)
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
      <param name=":Login_IP" dbType="String"/>
      <param name=":Host_Name" dbType="String"/>
      <param name=":BROWSER_INFO" dbType="String"/>
      <param name=":BROWSER_LANGUAGE" dbType="String"/>
      <param name=":BROWSER_BYTE" dbType="String"/>
      <param name=":LOGIN_EQUIPMENT" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuListByPID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT DISTINCT M.*
          FROM   D_Menu M
         WHERE M.IS_VALID = 1
           AND M.P_Menu_ID = :Menu_Pid
         ORDER BY M.MENU_SEQ
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_Pid" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuListByPIDAndUser" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
         SELECT DISTINCT M.*
        FROM  D_Role_Menu_Relation RM
        join D_User_Role_Relation UR on rm.role_id=ur.role_id
        join   d_Meun M on rm.menU_id=m.menu_id 
        join D_User R on UR.USER_ID=R.USER_ID
       WHERE M.IS_VALID = 1
         AND M.MENU_PID = :MENU_PID
         AND UPPER(R.USER_ACCOUNT) = UPPER(User_Account)
          ORDER BY M.MENU_SEQ
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
      <param name=":MENU_PID" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetSystemParameterValueByKey" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
        Select * from d_SYSTEM_PARAMETER where PARAMKEY=:Key
				  ]]>
    </commandText>
    <parameters>
      <param name=":Key" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="UpdateUser" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
   
   
DECLARE
   V_USER_ID   NUMBER;
BEGIN
   UPDATE D_User
      SET User_PWD = :User_pwd,
          user_name = :User_Name,
          User_Email = :User_Email,
          is_valid = :Is_Valid,
          user_tel = :User_Tel,
          LastEdit_By = :LAST_MODIFIED_BY,
          LastEdit_Date = SYSDATE
    WHERE UPPER (User_Account) = UPPER (:User_Account);

   SELECT USER_ID
     INTO V_USER_ID
     FROM D_USER
    WHERE User_Account = :User_Account;

   DELETE D_USER_CUSTOMER_RELATION
    WHERE USER_ID = V_USER_ID;

   INSERT INTO D_USER_CUSTOMER_RELATION (CUSTOMER_ID,
                                         USER_ID,
                                         IS_VALID,
                                         CREATE_DATE,
                                         CREATE_BY)
       VALUES (:Customer_ID,
               V_USER_ID,
               1,
               SYSDATE,
               :LAST_MODIFIED_BY);
END;
   
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
      <param name=":User_pwd" dbType="String"/>
      <param name=":User_Name" dbType="String"/>
      <param name=":Customer_ID" dbType="String"/>
      <param name=":User_Email" dbType="String"/>
      <param name=":User_Tel" dbType="String"/>
      <param name=":Is_Valid" dbType="Int32"/>
      <param name=":LAST_MODIFIED_BY" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="DeleteRoleUserByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
    DELETE FROM D_USER_ROLE_RELATION
      WHERE USER_ID = :USER_ID AND ROLE_ID = :ROLE_ID
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="String"/>
      <param name=":ROLE_ID" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddRoleUser" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
      INSERT INTO D_User_Role_Relation
        (ROLE_ID, USER_ID)
      VALUES
        (:Role_ID, :User_ID)
				  ]]>
    </commandText>
    <parameters>
      <param name=":Role_ID" dbType="String"/>
      <param name=":User_ID" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetOperateList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
      
SELECT DISTINCT C.MENU_ID,
                C.MENU_URL,
                A.ACTION_NAME,
                A.ACTION_TYPE,
                D.ROLE_ID,
                F.USER_ID,
                F.USER_ACCOUNT,
                NVL (C.CONTROLLER_ACTION, '  ') AS CONTROLLER_ACTION,
                C.MENU_NAME,
               NVL( UPPER (G.CONTROLLER_ACTION),' ')  AS BUTTON_CONTROLLER_ACTION
  FROM MSP_SYS.D_ROLE_MENU_RELATION_ACTION A
       JOIN MSP_SYS.D_ROLE_MENU_RELATION B
          ON A.RELATION_ID = B.RELATION_ID
       JOIN MSP_SYS.D_MENU C
          ON B.MENU_ID = C.MENU_ID
       JOIN MSP_SYS.D_ROLE D
          ON B.ROLE_ID = D.ROLE_ID
       JOIN MSP_SYS.D_USER_ROLE_RELATION E
          ON D.ROLE_ID = E.ROLE_ID
       JOIN MSP_SYS.D_USER F
          ON E.USER_ID = F.USER_ID
       LEFT JOIN MSP_SYS.D_MENU_ACTION_lIST G
          ON A.ACTION_TYPE = G.ACTION_TYPE AND C.MENU_ID = G.MENU_ID
 WHERE F.USER_ACCOUNT = :USER_ACCOUNT
 
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_account" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetUserListByPage" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT A.USER_ID,A.USER_ACCOUNT,A.USER_NAME,A.IS_VALID,a.User_Email,a.USER_TYPE,a.USER_TEL,a.Create_Date,a.CREATE_BY,a.USER_ID AS ID
        FROM D_User A 
       WHERE A.IS_VALID=1
         AND (UPPER(A.USER_Account) LIKE '%'|| UPPER(:User_Account) || '%' OR
             :User_Account IS NULL)
         AND (A.USER_NAME LIKE '%' || :User_Name || '%' OR
             :User_Name is null)
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_Account" dbType="String"/>
      <param name=":User_Name" dbType="String"/>

    </parameters>
  </dataCommand>

  <dataCommand name="GetUserListByRoleID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
     SELECT B.* 
     FROM D_User_Role_Relation_Relation A 
     LEFT Join D_User B
       ON UPPER(a.user_id) = UPPER(b.user_id)
     WHERE A.ROLE_ID = :Role_ID and b.IS_VALID = 1
				  ]]>
    </commandText>
    <parameters>
      <param name=":Role_ID" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="AddUser" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[


INSERT INTO D_USER (USER_ACCOUNT,
                    USER_PWD,
                    USER_NAME,
                    USER_EMAIL,
                    IS_VALID,
                    CREATE_BY,
                    CREATE_DATE,
                    USER_TEL,
                    IS_CHANGEPWD
                    )
    VALUES (UPPER (:USER_ACCOUNT),
            :USER_PWD,
            :USER_NAME,
            :USER_EMAIL,
            :IS_VALID,
            :CREATE_BY,
            SYSDATE,
            :USER_TEL,
            :IS_CHANGEPWD
            ) RETURNING USER_ID INTO :USER_ID
      
       
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_account" dbType="String"/>
      <param name=":user_PWD" dbType="String"/>
      <param name=":User_Name" dbType="String"/>
      <param name=":user_Email" dbType="String"/>
      <param name=":User_Tel" dbType="String"/>
      <param name=":Is_Valid" dbType="Int32"/>
      <param name=":create_by" dbType="String"/>
      <param name=":USER_ID" dbType="Int32"/>
      <param name=":IS_CHANGEPWD" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="isUserAccountExit" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT *
  FROM D_USER A
 WHERE UPPER (A.USER_ACCOUNT) = UPPER (:USER_ACCOUNT)
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_account" dbType="String"/>

    </parameters>
  </dataCommand>



  <dataCommand name="isUserIDExit" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT *
FROM
D_User A
WHERE A.USER_ID=:USER_ID
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>

    </parameters>
  </dataCommand>


  <dataCommand name="GetRoleInfoListByUserAccount" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT A.*
     FROM D_Role A 
     LEFT JOIN D_User_Role_Relation B
       ON a.role_id = b.role_id
    WHERE B.USER_ID=:User_id
    AND B.IS_VALID=1
     
				  ]]>
    </commandText>
    <parameters>
      <param name=":User_id" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetNotMyRoleListByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT A.*
  FROM MSP_SYS.D_ROLE A
 WHERE A.IS_VALID = 1
       AND A.ROLE_ID NOT IN (SELECT ROLE_ID
                          FROM MSP_SYS.D_USER_ROLE_RELATION B
                         WHERE B.USER_ID = :USER_ID)
     
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="DelleteUserRoleRelationByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

delete D_User_Role_Relation  where User_ID=:User_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":User_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="SaveUserRoleRelation" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
insert into   D_User_Role_Relation (user_id,role_id,is_valid,create_by, create_date)
values (:User_ID,:Role_ID,:Is_Valid,:Create_By, SYSDATE)

				  ]]>
    </commandText>
    <parameters>
      <param name=":User_ID" dbType="Int32"/>
      <param name=":Role_ID" dbType="Int32"/>
      <param name=":Is_Valid" dbType="Int32"/>
      <param name=":Create_By" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetLastLoginDateTime" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT *
  FROM (  SELECT *
            FROM MSP_SYS.D_LOGIN_LOG
           WHERE USER_ACCOUNT = :USER_ACCOUNT
        ORDER BY LOGIN_TIME DESC)
 WHERE ROWNUM < 2

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ACCOUNT" dbType="String"/>

    </parameters>
  </dataCommand>


  <dataCommand name="GetAllSiteList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT SITE_ID,SITE_NAME
FROM
IMS3_BASE.CENTER

				  ]]>
    </commandText>

  </dataCommand>


  <dataCommand name="GetSiteInfoListByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
SELECT A.SITE_ID, A.SITE_NAME
  FROM IMS3_BASE.CENTER A LEFT JOIN MSP_SYS.D_USER_SITE_RELATION B
          ON A.SITE_ID = B.SITE_ID
 WHERE B.USER_ID = :USER_ID AND B.IS_VALID = 1

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>

    </parameters>
  </dataCommand>

  <dataCommand name="GetSelectedSiteListByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

SELECT B.SITE_ID, B.SITE_NAME
  FROM MSP_SYS.D_USER_SITE_RELATION A JOIN IMS3_BASE.CENTER B
          ON A.SITE_ID = B.SITE_ID
 WHERE A.USER_ID = :USER_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="DelUserSiteInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

DELETE  MSP_SYS.D_USER_SITE_RELATION A
WHERE A.USER_ID=:USER_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddUserSiteInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

INSERT INTO MSP_SYS.D_USER_SITE_RELATION (USER_ID,
                                          SITE_ID,
                                          IS_VALID,
                                          CREATE_DATE,
                                          CREATE_BY)
    VALUES (:USER_ID,
            :SITE_ID,
            1,
            SYSDATE,
            :CREATE_BY)

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
      <param name=":SITE_ID" dbType="String"/>
      <param name=":CREATE_BY" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetStoreInfoListBySiteID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
  SELECT DISTINCT A.STORE_ID,
                  A.STORE_NAME,
                  C.SITE_NAME,
                  NVL (B.USER_ID, 0) AS USER_ID
    FROM IMS_LS.AGREEMENT A
         LEFT JOIN D_USER_STORE_RELATION B
            ON (    A.STORE_ID = B.STORE_ID
                AND A.SITE_ID = B.SITE_ID
                AND B.USER_ID = :USER_ID)
         JOIN IMS3_BASE.CENTER C
            ON A.SITE_ID = C.SITE_ID
   WHERE     A.AGM_TYPE = '4'
         AND A.STORE_COND != '5'
         AND A.STORE_ID IS NOT NULL
         AND A.SITE_ID = :SITE_ID
ORDER BY STORE_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":SITE_ID" dbType="String"/>
      <param name=":USER_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>



  <dataCommand name="DelUserStoreInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

DELETE  MSP_SYS.D_USER_STORE_RELATION A
WHERE A.USER_ID=:USER_ID AND A.SITE_ID=:SITE_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
      <param name=":SITE_ID" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddUserStoreInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

INSERT INTO MSP_SYS.D_USER_STORE_RELATION (USER_ID,
                                           STORE_ID,
                                           SITE_ID,
                                           IS_VALID,
                                           CREATE_DATE,
                                           CREATE_BY)
    VALUES (:USER_ID,
            :STORE_ID,
            :SITE_ID,
            1,
            SYSDATE,
            :CREATE_BY)

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
      <param name=":STORE_ID" dbType="String"/>
      <param name=":SITE_ID" dbType="String"/>
      <param name=":CREATE_BY" dbType="String"/>
    </parameters>
  </dataCommand>



  <dataCommand name="GetUserStoreInfoListByUserID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

SELECT DISTINCT C.SITE_ID,
                C.SITE_NAME,
                B.STORE_ID,
                B.STORE_NAME,
                A.USER_ID
  FROM MSP_SYS.D_USER_STORE_RELATION A
       JOIN IMS_LS.AGREEMENT B
          ON (A.SITE_ID = B.SITE_ID AND A.STORE_ID = B.STORE_ID)
       JOIN IMS3_BASE.CENTER C
          ON A.SITE_ID = C.SITE_ID
 WHERE A.USER_ID = :USER_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="DeleteAllUserInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
BEGIN
     DELETE MSP_SYS.D_USER
 WHERE USER_ID = :USER_ID;

DELETE MSP_SYS.D_USER_ROLE_RELATION
 WHERE USER_ID = :USER_ID;


DELETE MSP_SYS.D_USER_SITE_RELATION
 WHERE USER_ID = :USER_ID;


DELETE MSP_SYS.D_USER_STORE_RELATION
 WHERE USER_ID = :USER_ID;
 
 DELETE D_USER_CUSTOMER_RELATION
 WHERE USER_ID = :USER_ID;
 
 END;
    
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="UpdateUserPassWord" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

DECLARE
   V_EDIT_NUMBER   NUMBER;
   V_USER_ID       NUMBER;
BEGIN
   UPDATE MSP_SYS.D_USER A
      SET A.USER_PWD = :USER_PWD,
          A.LASTEDIT_BY = :LAST_MODIFIED_BY,
          A.LASTEDIT_DATE = SYSDATE
    WHERE A.USER_ACCOUNT = :USER_ACCOUNT;

   SELECT USER_ID
     INTO V_USER_ID
     FROM MSP_SYS.D_USER A
    WHERE A.USER_ACCOUNT = :USER_ACCOUNT;

   SELECT COUNT (1)
     INTO V_EDIT_NUMBER
     FROM MSP_SYS.D_USER_EDITPWD_LOG
    WHERE USER_ID = V_USER_ID;

   IF V_EDIT_NUMBER > 0
   THEN
      SELECT MAX (EDIT_NUM)
        INTO V_EDIT_NUMBER
        FROM MSP_SYS.D_USER_EDITPWD_LOG
       WHERE USER_ID = V_USER_ID;
   END IF;

   V_EDIT_NUMBER := V_EDIT_NUMBER + 1;

   INSERT INTO MSP_SYS.D_USER_EDITPWD_LOG (USER_ID,
                                           USER_PWD,
                                           EDIT_NUM,
                                           CREATE_DATE,
                                           CREATE_BY)
       VALUES (V_USER_ID,
               :PASSWORD,
               V_EDIT_NUMBER,
               SYSDATE,
               :CREATE_BY);
END;

				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ACCOUNT" dbType="String"/>
      <param name=":USER_PWD" dbType="String"/>
      <param name=":LAST_MODIFIED_BY" dbType="String"/>
      <param name=":CREATE_BY" dbType="String"/>
      <param name=":PASSWORD" dbType="String"/>
    </parameters>
  </dataCommand>

  <!--獲取客戶List-->
  <dataCommand name="GetCustomerList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

SELECT  CUSTOMER_ID,CUSTOMER_NAME
FROM
MSP_SYS.D_CUSTOMER
 

				  ]]>
    </commandText>

  </dataCommand>

  <!--判斷用戶與客戶關係是否存在-->
  <dataCommand name="isUserCustomerExstis" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

SELECT  B.*
  FROM MSP_SYS.D_USER_CUSTOMER_RELATION A
       JOIN MSP_SYS.D_USER B
          ON A.USER_ID = B.USER_ID
       JOIN MSP_SYS.D_CUSTOMER C
          ON A.CUSTOMER_ID = C.CUSTOMER_ID
 WHERE UPPER (B.USER_ACCOUNT) = UPPER (:USER_ACCOUNT)
       AND UPPER (C.CUSTOMER_NAME) = UPPER (:CUSTOMER_NAME) 
    
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ACCOUNT" dbType="String"/>
      <param name=":CUSTOMER_NAME" dbType="String"/>
    </parameters>
  </dataCommand>


  <!--存儲用戶和特店關係-->
  <dataCommand name="SaveUserCustomerInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

INSERT INTO D_USER_CUSTOMER_RELATION (CUSTOMER_ID,
                                      USER_ID,
                                      IS_VALID,
                                      CREATE_DATE,
                                      CREATE_BY)
    VALUES (:CUSTOMER_ID,
            :USER_ID,
            1,
            SYSDATE,
            :CREATE_BY)
    
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="String"/>
      <param name=":CUSTOMER_ID" dbType="String"/>
      <param name=":CREATE_BY" dbType="String"/>
    </parameters>
  </dataCommand>


  <!--存儲用戶和特店關係-->
  <dataCommand name="UpdateUserInfoIsChangedPWD" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

    UPDATE
    D_USER
    SET IS_CHANGEPWD=0,
        LASTEDIT_DATE=SYSDATE,
        LASTEDIT_BY=USER_ACCOUNT
    WHERE USER_ID=:USER_ID
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_ID" dbType="String"/>
    </parameters>
  </dataCommand>


</dataOperations>