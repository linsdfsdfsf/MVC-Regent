<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://www.w3.org/DataOperation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <dataCommand name="GetAllMenuList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT   *
        FROM D_Menu
       START WITH P_MENU_ID = 0
      CONNECT BY PRIOR MENU_ID = P_MENU_ID

				  ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetTreeMenuList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
 SELECT A.P_MENU_ID AS P_MENU_ID, A.MENU_ID AS MENU_ID, A.MENU_NAME
  FROM D_MENU A
UNION
SELECT B.MENU_ID AS P_MENU_ID,
       B.LIST_ID AS MENU_ID,
       B.ACTION_NAME AS MENU_NAME
  FROM D_MENU_ACTION_LIST B

				  ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetMenuIdListByRoleID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT B.MENU_ID
  FROM D_ROLE_MENU_RELATION A JOIN MSP_SYS.D_MENU B
          ON A.MENU_ID = B.MENU_ID
 WHERE A.ROLE_ID = :ROLE_ID
UNION
SELECT C.LIST_ID AS MENU_ID
  FROM D_MENU_ACTION_LIST C
                      JOIN  D_ROLE_MENU_RELATION_ACTION D ON C.ACTION_TYPE=D.ACTION_TYPE
JOIN D_ROLE_MENU_RELATION E ON  D.RELATION_ID=E.RELATION_ID AND C.MENU_ID=E.MENU_ID
WHERE E.ROLE_ID=:ROLE_ID
    
				  ]]>
    </commandText>
    <parameters>
      <param name=":Role_ID" dbType="String"/>
    </parameters>

  </dataCommand>

  <!--获取不属于Role_iD权限下的Menu List-->
  <dataCommand name="GetNotMenuListByRole" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[

--SELECT *
--  FROM (SELECT MENU_ID FROM D_MENU
--        UNION
--        SELECT LIST_ID AS MENU_ID
--          FROM D_MENU_ACTION_LIST)
--MINUS
--SELECT *
--  FROM (SELECT B.MENU_ID
--          FROM D_ROLE_MENU_RELATION A JOIN MSP_SYS.D_MENU B
--                  ON A.MENU_ID = B.MENU_ID
--         WHERE A.ROLE_ID = :Role_ID
--        UNION
--        SELECT C.LIST_ID AS MENU_ID
--          FROM D_MENU_ACTION_LIST C
--               JOIN D_ROLE_MENU_RELATION_ACTION D
--                  ON C.ACTION_TYPE = D.ACTION_TYPE
--               JOIN D_ROLE_MENU_RELATION E
--                  ON D.RELATION_ID = E.RELATION_ID
--         WHERE E.ROLE_ID = :Role_ID)

         
SELECT A.MENU_ID
  FROM D_MENU A
 WHERE NOT EXISTS (SELECT 1
                     FROM D_ROLE_MENU_RELATION B
                    WHERE A.MENU_ID = B.MENU_ID AND B.ROLE_ID = :ROLE_ID)
UNION
SELECT C.LIST_ID AS MENU_ID
  FROM D_MENU_ACTION_LIST C
 WHERE C.LIST_ID NOT IN (SELECT CC.LIST_ID AS MENU_ID
                           FROM D_MENU_ACTION_LIST CC
                                JOIN D_ROLE_MENU_RELATION_ACTION DD
                                   ON CC.ACTION_TYPE = DD.ACTION_TYPE
                                JOIN D_ROLE_MENU_RELATION EE
                                   ON DD.RELATION_ID = EE.RELATION_ID AND CC.MENU_ID=EE.MENU_ID
                          WHERE EE.ROLE_ID = :ROLE_ID)
         
				  ]]>
    </commandText>
    <parameters>
      <param name=":Role_ID" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuListByUserAccount" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
     
    SELECT D.*
    FROM D_USER A
         JOIN D_USER_ROLE_RELATION B
            ON A.USER_ID = B.USER_ID
         JOIN D_ROLE_MENU_RELATION C
            ON B.ROLE_ID = C.ROLE_ID
         JOIN D_MENU D
            ON C.MENU_ID = D.MENU_ID
   WHERE A.USER_ACCOUNT = :USER_Account
ORDER BY D.MENU_SEQ
         
				  ]]>
    </commandText>
    <parameters>
      <param name=":USER_Account" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuListByPage" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[
     
     SELECT MENU_ID,
       P_MENU_ID,
       MENU_NAME,
       NVL (MENU_URL, '  ') AS MENU_URL,
       MENU_SEQ,
       MENU_LEVEL,
       MENU_REMARK,
       MENU_SUB_NAME,
       IS_VALID,
       CREATE_DATE,
       CREATE_BY,
       LASTEDIT_DATE,
       LASTEDIT_BY,
       CONTROLLER_ACTION
  FROM MSP_SYS.D_MENU
  WHERE (MENU_NAME  LIKE '%'|| :MENU_NAME || '%' OR
             :MENU_NAME IS NULL)
  START WITH P_MENU_ID = 0
      CONNECT BY PRIOR MENU_ID = P_MENU_ID
         
				  ]]>
    </commandText>
    <parameters>
      <param name=":MENU_NAME" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuInfoByID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
select *
from
 D_Menu
 where menu_id=:menu_id    
				  ]]>
    </commandText>
    <parameters>
      <param name=":menu_id" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddMenu" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
      
     
DECLARE
   V_MENU_COUNT   NUMBER;
   V_MENU_LEVEL   NUMBER;
BEGIN
   SELECT COUNT (1)
     INTO V_MENU_COUNT
     FROM D_MENU A
    WHERE A.MENU_ID = :P_MENU_ID;

   IF (V_MENU_COUNT = 0)
   THEN
      V_MENU_LEVEL := 1;
   ELSE
      SELECT (MENU_LEVEL + 1)
        INTO V_MENU_LEVEL
        FROM D_MENU A
       WHERE A.MENU_ID = :P_MENU_ID;
   END IF;
   

   INSERT INTO D_MENU (P_MENU_ID,
                       MENU_NAME,
                       CONTROLLER_ACTION,
                       MENU_REMARK,
                       MENU_SEQ,
                       IS_VALID,
                       CREATE_DATE,
                       CREATE_BY,
                       MENU_LEVEL)
       VALUES (:P_MENU_ID,
               :MENU_NAME,
               :CONTROLLER_ACTION,
               :MENU_REMARK,
               :MENU_SEQ,
               :IS_VALID,
               SYSDATE,
               :CREATE_BY,
               V_MENU_LEVEL)
    RETURNING MENU_ID
         INTO :MENU_ID;

END;

				  ]]>
    </commandText>
    <parameters>
      <param name=":P_Menu_ID" dbType="Int32"/>
      <param name=":Menu_Name" dbType="String"/>
      <param name=":CONTROLLER_ACTION" dbType="String"/>
      <param name=":MENU_REMARK" dbType="String"/>
      <param name=":MENU_SEQ" dbType="Int32"/>
      <param name=":IS_VALID" dbType="Int32"/>
      <param name=":Create_By" dbType="String"/>
      <param name=":MENU_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateMenu" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
  /* Formatted on 2016/3/21 19:35:19 (QP5 v5.136.908.31019) */
DECLARE
   V_MENU_COUNT   NUMBER;
   V_MENU_LEVEL   NUMBER;
   V_P_MENU_ID    NUMBER;

BEGIN
   IF (:P_MENU_ID <> :MENU_ID)
   THEN
      SELECT COUNT (1)
        INTO V_MENU_COUNT
        FROM D_MENU A
       WHERE A.MENU_ID = :P_MENU_ID;

      IF (V_MENU_COUNT = 0)
      THEN
         V_MENU_LEVEL := 1;
      ELSE
         SELECT (MENU_LEVEL + 1)
           INTO V_MENU_LEVEL
           FROM D_MENU A
          WHERE A.MENU_ID = :P_MENU_ID;

         SELECT :P_MENU_ID INTO V_P_MENU_ID FROM DUAL;
      END IF;
   ELSE
      SELECT P_MENU_ID, MENU_LEVEL
        INTO V_P_MENU_ID, V_MENU_LEVEL
        FROM D_MENU
       WHERE MENU_ID = :MENU_ID;
   END IF;

   UPDATE D_MENU
      SET P_MENU_ID = V_P_MENU_ID,
          MENU_NAME = :MENU_NAME,
          CONTROLLER_ACTION = :CONTROLLER_ACTION,
          MENU_SEQ = :MENU_SEQ,
          IS_VALID = :IS_VALID,
          MENU_LEVEL = V_MENU_LEVEL,
          LASTEDIT_DATE = SYSDATE,
          LASTEDIT_BY = :LastEdit_By
    WHERE MENU_ID = :MENU_ID;
END;
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
      <param name=":P_Menu_ID" dbType="Int32"/>
      <param name=":Menu_Name" dbType="String"/>
      <param name=":CONTROLLER_ACTION" dbType="String"/>
      <param name=":MENU_SEQ" dbType="Int32"/>
      <param name=":IS_VALID" dbType="Int32"/>
      <param name=":LastEdit_By" dbType="String"/>
    </parameters>
  </dataCommand>


  <dataCommand name="SaveMenuSeq" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
   
      UPDATE
      D_Menu
      SET
      MENU_SEQ=:MENU_SEQ
      WHERE MENU_ID=:Menu_ID
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
      <param name=":MENU_SEQ" dbType="Int32"/>

    </parameters>
  </dataCommand>

  <dataCommand name="DelMenuInfo" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     

BEGIN
   DELETE D_ROLE_MENU_RELATION_ACTION A
    WHERE EXISTS
             (SELECT 1
                FROM D_ROLE_MENU_RELATION B
               WHERE A.RELATION_ID = RELATION_ID AND B.MENU_ID = :MENU_ID);

   DELETE D_ROLE_MENU_RELATION
    WHERE MENU_ID = :MENU_ID;


   DELETE D_MENU_ACTION_LIST
    WHERE MENU_ID = :MENU_ID;

   DELETE D_MENU
    WHERE MENU_ID = :MENU_ID;
END;
    
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="DeleteMenuAction" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
      
      DELETE D_Menu_Action_List
      WHERE MENU_ID=:Menu_ID 
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="SaveMenuAction" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     

DECLARE
   V_ACTION_NAME   VARCHAR2 (50);
BEGIN
   SELECT ACTION_NAME
     INTO V_ACTION_NAME
     FROM MSP_SYS.D_ACTION_LIST
    WHERE Action_Type = :Action_Type;

   INSERT INTO D_MENU_ACTION_LIST (MENU_ID,
                                   ACTION_NAME,
                                   ACTION_TYPE,
                                   CONTROLLER_ACTION,
                                   CREATE_BY,
                                   CREATE_DATE)
       VALUES (:MENU_ID,
               V_ACTION_NAME,
               :Action_Type,
               :CONTROLLER_ACTION,
               :CREATE_BY,
               SYSDATE);
END;

				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
      <param name=":Action_Type" dbType="String"/>
      <param name=":CONTROLLER_ACTION" dbType="String"/>
      <param name=":Create_By" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetActionListByMenuID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
   
      SELECT *
      FROM
      D_Menu_Action_List
      WHERE MENU_ID=:Menu_ID
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>

    </parameters>
  </dataCommand>


  <dataCommand name="GetRoleMenuActionByMenuID" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
 
 SELECT B.*
  FROM D_ROLE_MENU_RELATION A JOIN D_ROLE_MENU_RELATION_ACTION B
          ON A.RELATION_ID = B.RELATION_ID
 WHERE A.MENU_ID = :MENU_ID
 AND A.ROLE_ID=:ROLE_ID
 
				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
      <param name=":ROLE_ID" dbType="Int32"/>

    </parameters>
  </dataCommand>


  <dataCommand name="GetAllActionList" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
 
SELECT ACTION_TYPE,ACTION_NAME
FROM
MSP_SYS.D_ACTION_LIST
WHERE IS_VALID=1
ORDER BY ACTION_SORT

				  ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>


  <dataCommand name="GetMenuActionListIsSelected" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
 
SELECT A.ACTION_TYPE,A.ACTION_NAME,NVL(B.MENU_ID,0) AS IS_SELECTED,B.CONTROLLER_ACTION
FROM
MSP_SYS.D_ACTION_LIST A LEFT JOIN 
MSP_SYS.D_MENU_ACTION_LIST B ON ( A.ACTION_TYPE=B.ACTION_TYPE AND B.MENU_ID=:Menu_ID)
WHERE A.IS_VALID=1
ORDER BY A.ACTION_SORT

				  ]]>
    </commandText>
    <parameters>
      <param name=":Menu_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>



  <dataCommand name="CheckMenuExistsChild" database="MSP_SYS" commandType="Text">
    <commandText>
      <![CDATA[     
 
  SELECT *
FROM
MSP_SYS.D_MENU
WHERE P_MENU_ID=:P_MENU_ID

				  ]]>
    </commandText>
    <parameters>
      <param name=":P_MENU_ID" dbType="Int32"/>
    </parameters>
  </dataCommand>


</dataOperations>